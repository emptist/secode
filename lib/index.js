// Generated by CoffeeScript 1.10.0
var convertcode, convertcodes;

convertcode = function(acode, aprefix) {
  var code, prefix, ref;
  if (aprefix == null) {
    aprefix = 1;
  }

  /*prefix:
    0: '000001'
    1: 'sh000001'
    2: '000001sh'
    3: '000001.sh'
    6: '0600663','1159915' # 126.net, 163.com
   */
  if (aprefix === 'sina' || aprefix === 'ht') {
    prefix = 1;
  } else {
    prefix = aprefix;
  }
  code = acode.trim();
  if (/^s[h|z]\d{6}$/i.test(code)) {
    switch (prefix) {
      case 0:
        return code.slice(2);
      case 1:
        return code;
      case 2:
        return "" + code.slice(2) + code.slice(0, 2);
      case 3:
        return code.slice(2) + "." + code.slice(0, 2);
      case 6:
        if (code[1] === 'h') {
          return "0" + code.slice(2);
        } else {
          return "1" + code.slice(2);
        }
    }
  } else if (code.length > 6) {
    if (/^\d{7}$/.test(code)) {
      switch (prefix) {
        case 0:
          return code.slice(1);
        case 1:
          if (code[0] === '0') {
            return "sh" + code.slice(1);
          } else {
            return "sz" + code.slice(1);
          }
          break;
        case 2:
          if (code[0] === '0') {
            return code.slice(1) + "sh";
          } else {
            return code.slice(1) + "sz";
          }
          break;
        case 3:
          if (code[0] === '0') {
            return code.slice(1) + ".sh";
          } else {
            return code.slice(1) + ".sz";
          }
          break;
        case 6:
          return code;
      }
    } else {
      return convertcode(code.slice(0, 6), prefix);
    }
  } else if ((ref = code[0]) === '5' || ref === '6' || ref === '9') {
    switch (prefix) {
      case 0:
        return code;
      case 1:
        return "sh" + code;
      case 2:
        return code + "sh";
      case 3:
        return code + ".sh";
      case 6:
        return "0" + code;
    }
  } else {
    switch (prefix) {
      case 0:
        return code;
      case 1:
        return "sz" + code;
      case 2:
        return code + "sz";
      case 3:
        return code + ".sz";
      case 6:
        return "1" + code;
    }
  }
};

convertcodes = function(string, prefix) {
  var cd;
  return ((function() {
    var i, len, ref, results;
    ref = string.split(',');
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      cd = ref[i];
      results.push("" + (convertcode(cd, prefix)));
    }
    return results;
  })()).join(',');
};

module.exports = {
  recode: convertcode,
  restring: convertcodes
};

//# sourceMappingURL=index.js.map
